#ifndef OPTIMIZATION_H
#define OPTIMIZATION_H

double evaluateOptimizationFunction(double Bfactor, double n, double fractionSize, double rmax, double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, double* totalInu);
void findMinParameters(double& Bfactor, double& N, double& fractionSize, double rmax, double minLambda, double maxLambda, double gradB, double gradn, double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, double* totalInu);
void findMinParameters(double& Bfactor, double& N, double& fractionSize, double rmax, double gradB, double gradN, double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, double& currentF, double* totalInu);
void optimizeParameters(double& Bfactor, double& N, double& fractionSize, double rmax, double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, FILE* logFile);
void findMinParameters3(double& Bfactor, double& N, double& fractionSize, double rmax, double minLambda, double maxLambda, double gradB, double gradn, double gradS, double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, double* totalInu);
void findMinParameters3(double& Bfactor, double& N, double& fractionSize, double rmax, double gradB, double gradN, double gradS, double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, double& currentF, double* totalInu);
void optimizeParameters3(double& Bfactor, double& N, double& fractionSize, double rmax, double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, FILE* logFile);
void findMinParameters4(const double& B0, const double& N0, const double& R0, double& Bfactor, double& N, double& fractionSize, double& rmax, double gradB, double gradN, double gradS, double gradR, double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, double& currentF, double* totalInu);
void optimizeParameters4(const double& B0, const double& N0, const double& R0, double& Bfactor, double& N, double& fractionSize, double& rmax,  double* nu, double** Ee, double** Fe, int Np, int Nnu, int Nd, double** Bn, double** sintheta, int** thetaIndex, double** concentrations, double*** Inu, double*** Anu, double** area, double** length, double* Rho, double* Phi, FILE* logFile);

//for flat disk
double evaluateOptimizationFunction5(double Bfactor, double n, double fractionSize, double rmax, double v, double** nu, double** F, double** Ee, double** Fe, int Np, int Nnu, int Nd, int Nmonth, double*** Bn, double*** sintheta, int*** thetaIndex, double*** concentrations, double***** Inu, double***** Anu, double*** area, double*** length);
void findMinParameters5(const double& B0, const double& N0, const double& R0, const double& V0, double& Bfactor, double& N, double& fractionSize, double& rmax, double& v, double gradB, double gradN, double gradS, double gradR, double gradV, double** nu, double** F, double** Ee, double** Fe, int Np, int Nnu, int Nd, int Nmonth, double*** Bn, double*** sintheta, int*** thetaIndex, double*** concentrations, double***** Inu, double***** Anu, double*** area, double*** length, double& currentF);
void optimizeParameters5(const double& B0, const double& N0, const double& R0, const double& V0, double& Bfactor, double& N, double& fractionSize, double& rmax, double& v,  double** nu, double** F, double** Ee, double** Fe, int Np, int Nnu, int Nd, int Nmonth, double*** Bn, double*** sintheta, int*** thetaIndex, double*** concentrations, double***** Inu, double***** Anu, double*** area, double*** length, FILE* logFile);
//for simple flat disk
double evaluateOptimizationFunction5simple(double Bfactor, double n, double fractionSize, double rmax, double v, double** Ee, double** Fe, int Np, int Nd, double sintheta, int thetaIndex);
void findMinParameters5simple(const double& B0, const double& N0, const double& R0, const double& V0, double& Bfactor, double& N, double& fractionSize, double& rmax, double& v, double gradB, double gradN, double gradS, double gradR, double gradV, double** Ee, double** Fe, int Np, int Nd, double sintheta, int thetaIndex, double& currentF);
void optimizeParameters5simple(const double& B0, const double& N0, const double& R0, const double& V0, double& Bfactor, double& N, double& fractionSize, double& rmax, double& v, double** Ee, double** Fe, int Np, int Nd, double sintheta, int thetaIndex, FILE* logFile);

//for fix sigma
void findMinParameters5sigma(const double& sigma, const double& B0, const double& N0, const double& R0, const double& V0, double& Bfactor, double& N, double& fractionSize, double& rmax, double& v, double gradB, double gradS, double gradR, double gradV, double** nu, double** F, double** Ee, double** Fe, int Np, int Nnu, int Nd, int Nmonth, double*** Bn, double*** sintheta, int*** thetaIndex, double*** concentrations, double***** Inu, double***** Anu, double*** area, double*** length, double& currentF);
void optimizeParameters5sigma(const double& sigma, const double& B0, const double& N0, const double& R0, const double& V0, double& Bfactor, double& N, double& fractionSize, double& rmax, double& v,  double** nu, double** F, double** Ee, double** Fe, int Np, int Nnu, int Nd, int Nmonth, double*** Bn, double*** sintheta, int*** thetaIndex, double*** concentrations, double***** Inu, double***** Anu, double*** area, double*** length, FILE* logFile);
#endif